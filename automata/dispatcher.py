from abc import ABCMeta, abstractmethod
from typing import Any, Dict

# Диспетчер действий выполняет семантический разбор потока лексем,
# выполняя внедренные действия, и хранит в себе контекст разбора,
# например, множество разобранных идентификаторов.
# Перед началом очередного разбора следует сбросить состояние (контекст)
# диспетчера.
class AutomatonActionDispatcher(metaclass=ABCMeta):
    # Выполнить внедрённое действие action с аргументами state и token.
    # Возвращаемое значение сигнализирует о возможности продолжения разбора.
    # Если диспетчеру неизвестно действие action, ничего не делать и
    # вернуть True.
    @abstractmethod
    def __call__(self, state: str, token: str, action: str) -> bool:
        pass

    # Сбросить состояние диспетчера.
    @abstractmethod
    def reset(self) -> None:
        pass

    # Получение результатов разбора не регламентируется интерфейсом
    # диспетчера действий и должно реализовываться в подклассах.